using System;

namespace dotnet_repl
{
    public class SillyExecutionStatusMessageGenerator: IStatusMessageGenerator
    {
    private readonly Random _random = new();

    public string GetStatusMessage()
    {
        var countable = _random.NextDouble() > .3;
        return
            countable
                ? $"{_verbs[_random.Next(_verbs.Length)]} {_countableNounModifiers[_random.Next(_countableNounModifiers.Length)]} {_countableNouns[_random.Next(_countableNouns.Length)]}..."
                : $"{_verbs[_random.Next(_verbs.Length)]} {_uncountableNounModifiers[_random.Next(_uncountableNounModifiers.Length)]} {_uncountableNouns[_random.Next(_uncountableNouns.Length)]}...";
    }

    private readonly string[] _verbs =
    {
        "🤞",
        "🦾",
        "🧠",
        "😎",
        "😱",
        "🙌",
        "🙌🏾",
        "Allocating",
        "Analyzing",
        "Booting",
        "Calculating",
        "Collating",
        "Compiling",
        "Computing",
        "Concatenating",
        "Currying",
        "Dereferencing",
        "Destructuring",
        "Distributing",
        "Enumerating",
        "Executing",
        "Forking",
        "Hashing",
        "Hoisting",
        "Invoking",
        "Iterating",
        "Memoizing",
        "Mutating",
        "Obfuscating",
        "Optimizing",
        "Parallelizing",
        "Parameterizing",
        "Parsing",
        "Recursing",
        "Refactoring",
        "Running",
        "Shifting",
        "Sorting",
        "Splatting",
        "Tabulating",
        "Thunking",
        "Tokenizing",
        "Traversing",
        "Type-checking",
        "Verifying",
        "Warming up",
    };

    private readonly string[] _countableNounModifiers =
    {
        "a few",
        "a vast quantity of",
        "all kinds of",
        "all the",
        "gigabytes of",
        "hard drives full of",
        "piles of",
        "several",
        "so many",
        "some",
        "terabytes of",
        "the",
        "those",
        "two or three",
    };

    private readonly string[] _countableNouns =
    {
        "💻",
        "📊",
        "🤖",
        "abstractions",
        "algorithms",
        "arrays",
        "binary trees",
        "bits",
        "buffers",
        "bytes",
        "catamorphisms",
        "categories of endofunctors",
        "classes",
        "closures",
        "codes",
        "compilers",
        "computations",
        "conditionals",
        "control structures",
        "coroutines",
        "cyclomatic complexity",
        "data structures",
        "data transformations",
        "deadlocks",
        "discriminated unions",
        "edge cases",
        "expressions",
        "functions",
        "handles",
        "hash tables",
        "immutable values",
        "implementation details",
        "integers",
        "internets",
        "invariants",
        "lambdas",
        "linked lists",
        "loops",
        "modules",
        "monads",
        "mutexes",
        "networks",
        "nodes",
        "nonces",
        "objects",
        "parameters",
        "pointers",
        "postconditions",
        "preconditions",
        "pure functions",
        "race conditions",
        "references",
        "semaphores",
        "side effects",
        "singletons",
        "source files",
        "stacks",
        "subroutines",
        "symbols",
        "syntax trees",
        "things",
        "tokens",
        "tuples",
        "types",
        "union types",
        "variables",
    };

    private readonly string[] _uncountableNounModifiers =
    {
        "a bit of",
        "an incredible amount of",
        "hard drives full of",
        "lists of",
        "lots of",
        "piles of",
        "so much",
        "some",
        "the",
    };

    private readonly string[] _uncountableNouns =
    {
        "category theory",
        "computer science",
        "contravariance",
        "covariance",
        "cryptography",
        "cyclomatic complexity",
        "data science",
        "data",
        "dependency injection",
        "determinism",
        "documentation",
        "exploratory data analysis",
        "genius",
        "I/O",
        "idempotency",
        "inheritance",
        "latency",
        "logic",
        "machine learning",
        "OOP",
        "partial application",
        "polymorphism",
        "quantum computing",
        "recursion",
        "serialization",
        "significant whitespace",
        "smart stuff",
        "software",
        "source code",
        "storage",
        "tail recursion",
    };
    }
}